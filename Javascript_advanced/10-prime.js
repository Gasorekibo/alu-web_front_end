function countPrimeNumbers() {
  for (let i = 2; i <= 100; i++) {
    let isPrime = i % 2 !== 0;
    if (isPrime) {
      console.log(
        `Execution time of calculating prime numbers 100 times was ${performance.now()} milliseconds.`
      );
    }
  }
}
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
countPrimeNumbers();
